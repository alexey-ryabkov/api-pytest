{"uid":"47e5f0241433657b","name":"Retrieve an existing order","fullName":"test_store#test_retrieve_order","historyId":"89eb040c4548ff8eb813d0fdaa640a87","time":{"start":1740757026151,"stop":1740757026842,"duration":691},"description":"This test verifies that an existing order can be retrieved by ID.","descriptionHtml":"<p>This test verifies that an existing order can be retrieved by ID.</p>\n","status":"failed","statusMessage":"AssertionError: Expected API response status code 200, got 404","statusTrace":"store_api = <shared.rest_api_client.RestApiClient object at 0x103a04950>, order_id = 314314\n\n    @allure_annotation(\n        \"Retrieve an existing order\",\n        \"This test verifies that an existing order can be retrieved by ID.\",\n    )\n    @pytest.mark.flaky(reruns=5, reruns_delay=1)\n    def test_retrieve_order(store_api, order_id):\n        with allure.step(\"Send request to retrieve an order\"):\n            status_code, order = store_api.retrieve(f\"order/{order_id}\")\n>       assert_status_code_is_ok(status_code)\n\ntest_store.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nshared/assert_helper.py:6: in assert_status_code_is_ok\n    assert_status_code(status_code, OK_STATUS_CODE)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nstatus_code = 404, expected_status_code = 200\n\n    def assert_status_code(status_code: int, expected_status_code: int):\n        with allure.step(f\"Verify response status code is {expected_status_code}\"):\n            assert (\n>               status_code == expected_status_code\n            ), f\"Expected API response status code {expected_status_code}, got {status_code}\"\nE           AssertionError: Expected API response status code 200, got 404\n\nshared/assert_helper.py:16: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"Test environment","time":{"start":1740757017826,"stop":1740757017834,"duration":8},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Order ID","time":{"start":1740757026150,"stop":1740757026151,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"Order data","time":{"start":1740757026150,"stop":1740757026150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"REST API client instance for store entity","time":{"start":1740757026150,"stop":1740757026150,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"testStage":{"description":"This test verifies that an existing order can be retrieved by ID.","status":"failed","statusMessage":"AssertionError: Expected API response status code 200, got 404","statusTrace":"store_api = <shared.rest_api_client.RestApiClient object at 0x103a04950>, order_id = 314314\n\n    @allure_annotation(\n        \"Retrieve an existing order\",\n        \"This test verifies that an existing order can be retrieved by ID.\",\n    )\n    @pytest.mark.flaky(reruns=5, reruns_delay=1)\n    def test_retrieve_order(store_api, order_id):\n        with allure.step(\"Send request to retrieve an order\"):\n            status_code, order = store_api.retrieve(f\"order/{order_id}\")\n>       assert_status_code_is_ok(status_code)\n\ntest_store.py:68: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nshared/assert_helper.py:6: in assert_status_code_is_ok\n    assert_status_code(status_code, OK_STATUS_CODE)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nstatus_code = 404, expected_status_code = 200\n\n    def assert_status_code(status_code: int, expected_status_code: int):\n        with allure.step(f\"Verify response status code is {expected_status_code}\"):\n            assert (\n>               status_code == expected_status_code\n            ), f\"Expected API response status code {expected_status_code}, got {status_code}\"\nE           AssertionError: Expected API response status code 200, got 404\n\nshared/assert_helper.py:16: AssertionError","steps":[{"name":"Send request to retrieve an order","time":{"start":1740757026151,"stop":1740757026841,"duration":690},"status":"passed","steps":[{"name":"Send GET request to https://petstore.swagger.io/v2/store/order/314314","time":{"start":1740757026151,"stop":1740757026151,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":1,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Verify response status code is 200","time":{"start":1740757026841,"stop":1740757026841,"duration":0},"status":"failed","statusMessage":"AssertionError: Expected API response status code 200, got 404\n","statusTrace":"  File \"/Users/lexei/Documents/Education/ITHub/Тестирование. Проектирование тестов/api-pytest/shared/assert_helper.py\", line 16, in assert_status_code\n    status_code == expected_status_code\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":3,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"feature","value":"Test store entity in Petstore API"},{"name":"suite","value":"Petstore API Tests"},{"name":"tag","value":"flaky(reruns=5, reruns_delay=1)"},{"name":"host","value":"Dartys-MacBook.local"},{"name":"thread","value":"24142-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_store"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":["flaky(reruns=5, reruns_delay=1)"]},"source":"47e5f0241433657b.json","parameterValues":[]}